targetScope = 'subscription'

/******************************/
/*         PARAMETERS         */
/******************************/
@description('Boolean describing whether or not to enable soft delete on Key Vault - set to TRUE for production')
param enableKvSoftDelete bool = false

@description('The Azure Region in which to deploy the Spring Apps Landing Zone Accelerator')
param location string

@description('The common prefix used when naming resources')
param namePrefix string

@description('Name of the RG that has the spoke VNET. Leave blank if you need one created')
param spokeVnetName string = 'vnet-${namePrefix}-${location}-SPOKE'

@description('Azure Resource Tags')
param tags object = {}

@description('Timestamp value used to group and uniquely identify a given deployment')
param timeStamp string = utcNow('yyyyMMddHHmm')

@secure()
@description('Autogenerated VM Admin Account')
param vmSecret string = uniqueString(deployment().name)

var randomSufix = substring(uniqueString(deployment().name), 0, 4)

/******************************/
/*     RESOURCES & MODULES    */
/******************************/
resource sharedRg 'Microsoft.Resources/resourceGroups@2022-09-01' = {
  name: 'rg-${namePrefix}-SHARED'
  location: location
  tags: tags
}

module keyVault '../Modules/keyVault.bicep' = {
  name: '${timeStamp}-${namePrefix}-kv'
  scope: resourceGroup(sharedRg.name)
  params: {
    dnsResourceGroupName: 'rg-${namePrefix}-HUB'
    enableSoftDelete: enableKvSoftDelete
    location: location
    name: 'kv-${namePrefix}-${randomSufix}'
    networkResourceGroupName: 'rg-${namePrefix}-SPOKE'
    subnetName: 'snet-support'
    targetResourceGroupName: sharedRg.name
    timeStamp: timeStamp
    vnetName: spokeVnetName
  }
}

module vmPasswordSecret '../Modules/keyVaultSecret.bicep' = {
  name: '${timeStamp}-${namePrefix}-kvSecret'
  scope: resourceGroup(sharedRg.name)
  params: {
    parentKeyVaultName: keyVault.outputs.name
    secretName: 'vmPassword'
    secretValue: vmSecret
  }
}

module logAnalyticsWorkspace '../Modules/logAnalyticsWorkspace.bicep' = {
  name: '${timeStamp}-${namePrefix}-law'
  scope: resourceGroup(sharedRg.name)
  params: {
    location: location
    name: 'kv-${namePrefix}-${randomSufix}'
  }
}
