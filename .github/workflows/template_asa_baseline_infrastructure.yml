name: Template ASA Baseline Infrastructure Deployment
on:
    workflow_call:        
      inputs:
        NAME_PREFIX: 
            required: true
            type: string
        ENVIRONMENT: 
            required: true
            type: string
        REGION:
            required: true
            type: string
        TFSTATE_RG:
            required: true
            type: string
        STORAGEACCOUNTNAME:
            required: true
            type: string
        CONTAINERNAME:
            required: true
            type: string
        SPRINGAPPS_SPN_OBJECT_ID:
          required: true
          type: string
        JUMP_BOX_USERNAME:
          required: true
          type: string
        DEPLOY_FIREWALL:
          required: true
          type: string
        AZURE_CLIENT_ID:
          required: true
          type: string
        AZURE_SUBSCRIPTION_ID:
          required: true
          type: string
        AZURE_TENANT_ID:
          required: true
          type: string
      secrets:
        JUMP_BOX_PASSWORD:
          required: true
        AZURE_CLIENT_SECRET:
          required: true
      outputs:
        private_dns_rg:
          value: ${{ jobs.deploy_lz_network.outputs.private_dns_rg}}
        shared_rg:
          value: ${{ jobs.deploy_lz_shared.outputs.shared_rg}}
        spoke_rg:
          value: ${{ jobs.deploy_lz_network.outputs.spoke_rg}}
        jump_host_name:
          value: ${{ jobs.deploy_lz_shared.outputs.jump_host_name}}
env:
    TFSTATE_RG: ${{inputs.TFSTATE_RG}}
    STORAGEACCOUNTNAME: ${{inputs.STORAGEACCOUNTNAME}}
    CONTAINERNAME: ${{ inputs.CONTAINERNAME}}
    NAME_PREFIX: ${{inputs.NAME_PREFIX}}
    ENVIRONMENT: ${{inputs.ENVIRONMENT}}
    REGION: ${{ inputs.REGION }}
    SPRINGAPPS_SPN_OBJECT_ID: ${{ inputs.SPRINGAPPS_SPN_OBJECT_ID}}
    JUMP_BOX_USERNAME: ${{inputs.JUMP_BOX_USERNAME}}
    DEPLOY_FIREWALL: ${{ inputs.DEPLOY_FIREWALL}}
    
    # ==== Terraform Azure Login ===:
    ARM_CLIENT_ID: ${{ inputs.AZURE_CLIENT_ID }} 
    ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
    ARM_SUBSCRIPTION_ID: ${{ inputs.AZURE_SUBSCRIPTION_ID }}
    ARM_TENANT_ID: ${{ inputs.AZURE_TENANT_ID }}

jobs:
    deploy_hub_network:
        name: 02-Hub-Network
        runs-on: ubuntu-latest
        defaults:
          run:
            working-directory: Scenarios/ASA-Secure-Baseline/Terraform/02-Hub-Network
        steps:
        - name: Checkout this repository
          uses: actions/checkout@v3
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2.0.3
          with:
            terraform_wrapper: false
        - name: Terraform Init
          run: |
            terraform init \
            -backend-config="resource_group_name=${{ env.TFSTATE_RG }}" \
            -backend-config="storage_account_name=${{ env.STORAGEACCOUNTNAME }}" \
            -backend-config="container_name=${{ env.CONTAINERNAME }}"
        - name: Terraform Plan
          run: |
            terraform plan -out my.plan  \
            -var="state_sa_rg=${{ env.TFSTATE_RG }}" \
            -var="state_sa_name=${{ env.STORAGEACCOUNTNAME }}" \
            -var="state_sa_container_name=${{ env.CONTAINERNAME }}" \
            -var="location=${{ env.REGION }}" \
            -var="name_prefix=${{ env.NAME_PREFIX }}" \
            -var="environment=${{ env.ENVIRONMENT }}" \
            -var="SPRINGAPPS_SPN_OBJECT_ID=${{ env.SPRINGAPPS_SPN_OBJECT_ID }}"
        - name: Terraform Apply
          run: terraform apply my.plan
    deploy_lz_network:
      name: 03-LZ-Network
      needs: [deploy_hub_network]
      runs-on: ubuntu-latest
      outputs:
        spoke_vnet_name: ${{ steps.output.outputs.spoke_vnet_name }}
        spoke_rg: ${{ steps.output.outputs.spoke_rg }}
        private_dns_rg: ${{ steps.output.outputs.private_dns_rg }}
      defaults:
        run:
          working-directory: Scenarios/ASA-Secure-Baseline/Terraform/03-LZ-Network
      steps:
        - name: Checkout this repository
          uses: actions/checkout@v3
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2.0.3
          with:
            terraform_wrapper: false
        - name: Terraform Init
          run: |
            terraform init \
            -backend-config="resource_group_name=${{ env.TFSTATE_RG }}" \
            -backend-config="storage_account_name=${{ env.STORAGEACCOUNTNAME }}" \
            -backend-config="container_name=${{ env.CONTAINERNAME }}"
        - name: Terraform Plan
          run: |
            terraform plan -out my.plan \
            -var="state_sa_rg=${{ env.TFSTATE_RG }}" \
            -var="state_sa_name=${{ env.STORAGEACCOUNTNAME }}" \
            -var="state_sa_container_name=${{ env.CONTAINERNAME }}" \
            -var="location=${{ env.REGION }}" \
            -var="name_prefix=${{ env.NAME_PREFIX }}" \
            -var="environment=${{ env.ENVIRONMENT }}" \
            -var="SPRINGAPPS_SPN_OBJECT_ID=${{ env.SPRINGAPPS_SPN_OBJECT_ID }}"
        - name: Terraform Apply
          run: terraform apply my.plan
        - name: Terraform Output
          id: output
          run: |
            echo spoke_vnet_name=$(terraform output -raw spoke_vnet_name) >> $GITHUB_OUTPUT
            echo spoke_rg=$(terraform output -raw spoke_rg) >> $GITHUB_OUTPUT
            echo private_dns_rg=$(terraform output -raw private_dns_rg) >> $GITHUB_OUTPUT

    deploy_lz_shared:
      needs: [deploy_lz_network]
      name: 04-LZ-SharedResources
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: Scenarios/ASA-Secure-Baseline/Terraform/04-LZ-SharedResources
      outputs:
        shared_rg: ${{ steps.output.outputs.shared_rg }}
        jump_host_name: ${{ steps.output.outputs.jump_host_name }}
      steps:
        - name: Checkout this repository
          uses: actions/checkout@v3
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2.0.3
          with:
            terraform_wrapper: false
        - name: Terraform Init
          run: |
            terraform init \
            -backend-config="resource_group_name=${{ env.TFSTATE_RG }}" \
            -backend-config="storage_account_name=${{ env.STORAGEACCOUNTNAME }}" \
            -backend-config="container_name=${{ env.CONTAINERNAME }}"
        - name: Terraform Plan
          run: |
            terraform plan -out my.plan  \
            -var="state_sa_rg=${{ env.TFSTATE_RG }}" \
            -var="state_sa_name=${{ env.STORAGEACCOUNTNAME }}" \
            -var="state_sa_container_name=${{ env.CONTAINERNAME }}" \
            -var="location=${{ env.REGION }}" \
            -var="name_prefix=${{ env.NAME_PREFIX }}" \
            -var="environment=${{ env.ENVIRONMENT }}" \
            -var="SPRINGAPPS_SPN_OBJECT_ID=${{ env.SPRINGAPPS_SPN_OBJECT_ID }}" \
            -var="jump_host_admin_username=${{ env.JUMP_BOX_USERNAME }}" \
            -var="jump_host_password=${{ secrets.JUMP_BOX_PASSWORD}}"
        - name: Terraform Apply
          run: terraform apply my.plan
        - name: Terraform Output
          id: output
          run: |
            echo shared_rg=$(terraform output -raw shared_rg) >> $GITHUB_OUTPUT
            echo jump_host_name=$(terraform output -raw jump_host_name) >> $GITHUB_OUTPUT
    deploy_hub_firewall:
      name: 05-Hub-AzureFirewall
      needs: [deploy_hub_network, deploy_lz_shared]
      if:  inputs.DEPLOY_FIREWALL
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: Scenarios/ASA-Secure-Baseline/Terraform/05-Hub-AzureFirewall
      steps:
        - name: Checkout this repository
          uses: actions/checkout@v3
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2.0.3
          with:
            terraform_wrapper: false
        - name: Terraform Init
          run: |
            terraform init \
            -backend-config="resource_group_name=${{ env.TFSTATE_RG }}" \
            -backend-config="storage_account_name=${{ env.STORAGEACCOUNTNAME }}" \
            -backend-config="container_name=${{ env.CONTAINERNAME }}"
        - name: Terraform Plan
          run: |
            terraform plan -out my.plan \
            -var="state_sa_rg=${{ env.TFSTATE_RG }}" \
            -var="state_sa_name=${{ env.STORAGEACCOUNTNAME }}" \
            -var="state_sa_container_name=${{ env.CONTAINERNAME }}" \
            -var="location=${{ env.REGION }}" \
            -var="name_prefix=${{ env.NAME_PREFIX }}" \
            -var="environment=${{ env.ENVIRONMENT }}" \
            -var="SPRINGAPPS_SPN_OBJECT_ID=${{ env.SPRINGAPPS_SPN_OBJECT_ID }}"
        - name: Terraform Apply
          run: terraform apply my.plan
